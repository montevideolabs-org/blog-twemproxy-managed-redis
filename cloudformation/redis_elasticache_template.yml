AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  RedisSubnets:
    Description: Private Subnet IDs for Redis 
    Type: "List<AWS::EC2::Subnet::Id>"
  RedisVpc:
    Description: VPC Id
    Type: "AWS::EC2::VPC::Id"
  NodeCount:
    Description: Number of redis nodes
    Type: Number
    Default: 2
  NodeType:
    Description: Redis node type
    Type: String
    Default: cache.t3.micro

Resources:
  RedisReplicationGroup:
   Type: "AWS::ElastiCache::ReplicationGroup"
   Properties:
     ReplicationGroupId: !Sub '${AWS::StackName}-rep-group'
     ReplicationGroupDescription: Sincera Redis Replication Group
     AutomaticFailoverEnabled: true
     ClusterMode: Disabled
     NumCacheClusters: !Ref NodeCount
     CacheNodeType: !Ref NodeType
     Engine: redis
     EngineVersion: '7.0'
     CacheSubnetGroupName: !Ref CacheSubnetGroup
     SecurityGroupIds: 
       - !GetAtt RedisSg.GroupId
     SnapshotRetentionLimit: 7
  RedisSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Redis cluster security group
      GroupName: !Sub '${AWS::StackName}-redis-sg'
      SecurityGroupEgress: 
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: redis
      - Key: iac
        Value: cloudformation
      VpcId: !Ref RedisVpc

  CacheSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      CacheSubnetGroupName: !Sub '${AWS::StackName}-RedisSubnetGroup'
      Description: Redis Subnet group
      SubnetIds: !Ref RedisSubnets

      Tags:
      - Key: Name
        Value: redisSubnetGroup
      - Key: iac
        Value: cloudformation
